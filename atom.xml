<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LoveITer</title>
  
  <subtitle>欢迎访问我的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://easyblog.top/"/>
  <updated>2019-08-05T11:26:55.049Z</updated>
  <id>http://easyblog.top/</id>
  
  <author>
    <name>黄鑫</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringMVC获取请求参数</title>
    <link href="http://easyblog.top/2019/08/06/Springmvc/"/>
    <id>http://easyblog.top/2019/08/06/Springmvc/</id>
    <published>2019-08-06T11:24:59.000Z</published>
    <updated>2019-08-05T11:26:55.049Z</updated>
    
    <content type="html"><![CDATA[<h4 id="第一种方式：方法的形参上给一个和请求参数同名的参数"><a href="#第一种方式：方法的形参上给一个和请求参数同名的参数" class="headerlink" title="第一种方式：方法的形参上给一个和请求参数同名的参数"></a>第一种方式：方法的形参上给一个和请求参数同名的参数</h4><h5 id="1-获得普通类型的参数值"><a href="#1-获得普通类型的参数值" class="headerlink" title="1.获得普通类型的参数值"></a>1.获得普通类型的参数值</h5><p><font size="4">示例代码</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 第1种获得请求参数的方式：在方法的形参上给一个和请求参数同名的参数，</span></span><br><span class="line"><span class="comment"> *  之后SpringMVC会帮我们自动注入参数值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/welcome"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">welcome</span><span class="params">(String username, Model model)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"用户名："</span>+username);</span><br><span class="line">    model.addAttribute(<span class="string">"username"</span>,username);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-获得POJO类型的值"><a href="#2-获得POJO类型的值" class="headerlink" title="2.获得POJO类型的值"></a>2.获得POJO类型的值</h5><p><font size="4">示例代码：</font><br>新建Book.java以及Address.java两个POJO<br><code>Book.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xzy.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line">    <span class="keyword">private</span> Integer stock;   <span class="comment">//库存</span></span><br><span class="line">    <span class="keyword">private</span> Integer sales;   <span class="comment">//销量</span></span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> Address address;  <span class="comment">//地址</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//省略getter、setter方法，并且重写toString()方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Address.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xzy.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String province;</span><br><span class="line">    <span class="keyword">private</span> String county;</span><br><span class="line">    <span class="keyword">private</span> String city;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//省略getter、setter方法，并且重写toString()方法</span></span><br></pre></td></tr></table></figure><p>写一个简单的表单：<br><code>index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>SpringMvc获取参数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>录入书籍信息<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"book"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        书名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">placeholder</span>=<span class="string">"输入书名..."</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        作者：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">placeholder</span>=<span class="string">"输入作者..."</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        价格：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"price"</span> <span class="attr">placeholder</span>=<span class="string">"输入价格..."</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        库存：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stock"</span> <span class="attr">placeholder</span>=<span class="string">"输入库存..."</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        销量：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"sales"</span> <span class="attr">placeholder</span>=<span class="string">"输入销量..."</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"address.province"</span> /&gt;</span>省&amp;nbsp;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"address.city"</span> /&gt;</span>市&amp;nbsp;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"address.county"</span> /&gt;</span>(区/县)&amp;nbsp;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>提交信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提交后的页面：<br><code>book.jsp</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span></span><br><span class="line">    <span class="keyword">import</span>=<span class="string">"com.xzy.bean.*"</span></span><br><span class="line">%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;SpringMVC获取参数&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;center&gt;</span><br><span class="line">    &lt;div style=<span class="string">"height: 200px;width: 100%"</span>&gt;</span><br><span class="line">        &lt;h3&gt;提交的书籍的信息：&lt;/h3&gt;</span><br><span class="line">        &lt;table border=<span class="string">"1px"</span> width=<span class="string">"50%"</span>&gt;</span><br><span class="line">            &lt;tr&gt;&lt;th&gt;书名&lt;/th&gt;&lt;td&gt;$&#123;book.name&#125;&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;&lt;th&gt;作者&lt;/th&gt;&lt;td&gt;$&#123;book.author&#125;&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;&lt;th&gt;价格&lt;/th&gt;&lt;td&gt;$&#123;book.price&#125;&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;&lt;th&gt;库存&lt;/th&gt;&lt;td&gt;$&#123;book.stock&#125;&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;&lt;th&gt;销量&lt;/th&gt;&lt;td&gt;$&#123;book.sales&#125;&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;&lt;th&gt;地区&lt;/th&gt;&lt;td&gt;$&#123;book.address&#125;&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>提供一个控制器：<br><code>BookContorller.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xzy.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xzy.bean.Book;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookContorller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * SprningMVC帮我们自动注入参数到POJO类型中，而且还可以级联注入</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> book</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/book"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addbook</span><span class="params">(Book book, HttpServletRequest request)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印得到的book信息</span></span><br><span class="line">        System.out.println(book);</span><br><span class="line">        request.setAttribute(<span class="string">"book"</span>,book);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"book"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果：<br><img src="./QQ%E6%88%AA%E5%9B%BE20190804124754.png" alt="Alt text"><br><img src="./QQ%E6%88%AA%E5%9B%BE20190804124807.png" alt="Alt text"></p><h4 id="第二种方式：使用Spring提供的注解"><a href="#第二种方式：使用Spring提供的注解" class="headerlink" title="第二种方式：使用Spring提供的注解"></a>第二种方式：使用Spring提供的注解</h4><h5 id="1-使用-RequestParam-获取参数"><a href="#1-使用-RequestParam-获取参数" class="headerlink" title="1. 使用@RequestParam 获取参数"></a>1. 使用@RequestParam 获取参数</h5><p>@RequestParam的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> RequestParam &#123;</span><br><span class="line">    <span class="comment">//默认值就是它，表示请求参数的key</span></span><br><span class="line">    <span class="meta">@AliasFor</span>(<span class="string">"name"</span>)</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//请求参数的值</span></span><br><span class="line">    <span class="meta">@AliasFor</span>(<span class="string">"value"</span>)</span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;  </span><br><span class="line">    </span><br><span class="line">   <span class="comment">//设置这个参数是否必须，required=false表示这个参数不是必须的</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">required</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;   </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//参数的默认值</span></span><br><span class="line">    <span class="function">String <span class="title">defaultValue</span><span class="params">()</span> <span class="keyword">default</span>       "\n\t\t\n\t\t\n\ue000\ue001\ue002\n\t\t\t\t\n"</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font size="4">示例代码：</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RequestParam设置获取参数的key为user,required=false表示这个参数不是必须的，</span></span><br><span class="line"><span class="comment"> * defaultValue是这个参数的默认值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@RequestParam</span>(value = "user", required = false, defaultValue = "") String username；</span></span><br><span class="line"><span class="comment"> * 等价于以前写的：</span></span><br><span class="line"><span class="comment"> * String user=null!=request.getParameter("user")?request.getParameter("user"):"";</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/welcome3"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">welocme3</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        @RequestParam(value = <span class="string">"user"</span>, required = <span class="keyword">false</span>, defaultValue = <span class="string">""</span>)</span> String username, Model model) </span>&#123;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"用户名："</span> + username);</span><br><span class="line"></span><br><span class="line">    model.addAttribute(<span class="string">"username"</span>, username);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-使用-RequestHeader获得请求的头部信息"><a href="#2-使用-RequestHeader获得请求的头部信息" class="headerlink" title="2.使用@RequestHeader获得请求的头部信息"></a>2.使用@RequestHeader获得请求的头部信息</h5><p><code>@RequestHeader</code>和<code>@ReuqestParma</code>的实现方式如出一辙，使用方法也基本相同。<br><font size="4">示例代码1：</font>使用RequestHeader注解获得浏览器的信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    *  <span class="doctag">@RequestHeader</span>(value = "User-Agent",required = false,defaultValue = "") String userAgent</span></span><br><span class="line"><span class="comment">    *  获取请求头中的值，相当于以前写的：</span></span><br><span class="line"><span class="comment">    *  String header=null!=request.getHeader("User-Agent")?      request.getHeader("User-Agent"):"";</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> userAgent</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/welcome4"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">welocme4</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">           @RequestParam(value = <span class="string">"user"</span>, required = <span class="keyword">false</span>, defaultValue = <span class="string">""</span>)</span> String username,</span></span><br><span class="line"><span class="function">           @<span class="title">RequestHeader</span><span class="params">(value = <span class="string">"User-Agent"</span>,defaultValue = <span class="string">""</span>)</span> String userAgent,</span></span><br><span class="line"><span class="function">           Model model) </span>&#123;</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">"用户名："</span> + username);</span><br><span class="line">       System.out.println(<span class="string">"User-Agent"</span>+userAgent);</span><br><span class="line">       model.addAttribute(<span class="string">"userAgent"</span>,userAgent);</span><br><span class="line">       model.addAttribute(<span class="string">"username"</span>, username);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><font size="4">示例代码2：</font>使用RequestHeader注解获取请求头部的Cookie信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 使用RequestHeader获得请求头中的Cookie的全部信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> cookie</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/welcome5"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">welocome5</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">           @RequestParam(value = <span class="string">"user"</span>, required = <span class="keyword">false</span>, defaultValue = <span class="string">""</span>)</span> String username,</span></span><br><span class="line"><span class="function">           @<span class="title">RequestHeader</span><span class="params">(value = <span class="string">"Cookie"</span>,required = <span class="keyword">false</span>,defaultValue = <span class="string">""</span>)</span> String cookie,</span></span><br><span class="line"><span class="function">            Model model)</span>&#123;</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">"用户名："</span> + username);</span><br><span class="line">       model.addAttribute(<span class="string">"cookie"</span>,cookie);</span><br><span class="line">       model.addAttribute(<span class="string">"username"</span>, username);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="3-使用CookieValue获得请求头部的JSESSIONID"><a href="#3-使用CookieValue获得请求头部的JSESSIONID" class="headerlink" title="3.使用CookieValue获得请求头部的JSESSIONID"></a>3.使用CookieValue获得请求头部的JSESSIONID</h5><p><font size="4">示例代码：</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用SpringMVC提供的<span class="doctag">@CookieValue</span>注解，可以只获的JSESSIONID的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cookie</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/welcome6"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">welocome6</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @RequestParam(value = <span class="string">"user"</span>, required = <span class="keyword">false</span>, defaultValue = <span class="string">""</span>)</span> String username,</span></span><br><span class="line"><span class="function">            @<span class="title">CookieValue</span><span class="params">(value = <span class="string">"JSESSIONID"</span> ,required = <span class="keyword">false</span>,defaultValue = <span class="string">""</span>)</span> String cookie,</span></span><br><span class="line"><span class="function">            Model model)</span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"用户名："</span> + username);</span><br><span class="line">        model.addAttribute(<span class="string">"cookie"</span>,cookie);</span><br><span class="line">        model.addAttribute(<span class="string">"username"</span>, username);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"cookie："</span>+cookie);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;第一种方式：方法的形参上给一个和请求参数同名的参数&quot;&gt;&lt;a href=&quot;#第一种方式：方法的形参上给一个和请求参数同名的参数&quot; class=&quot;headerlink&quot; title=&quot;第一种方式：方法的形参上给一个和请求参数同名的参数&quot;&gt;&lt;/a&gt;第一种方式：方法的形参
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>认识Spring框架</title>
    <link href="http://easyblog.top/2019/08/05/%E8%AE%A4%E8%AF%86Spring%E6%A1%86%E6%9E%B6/"/>
    <id>http://easyblog.top/2019/08/05/认识Spring框架/</id>
    <published>2019-08-05T11:24:59.000Z</published>
    <updated>2019-08-06T06:06:17.601Z</updated>
    
    <content type="html"><![CDATA[<center><img src="http://image.baidu.com/search/detail?ct=503316480&z=undefined&tn=baiduimagedetail&ipn=d&word=spring%E5%9B%BE%E6%A0%87&step_word=&ie=utf-8&in=&cl=2&lm=-1&st=-1&hd=undefined&latest=undefined&copyright=undefined&cs=3462317778,3873716593&os=3955912653,85125293&simid=0,0&pn=1&rn=1&di=71830&ln=592&fr=&fmq=1565014176066_R&fm=rs1&ic=undefined&s=undefined&se=&sme=&tab=0&width=undefined&height=undefined&face=undefined&is=0,0&istype=0&ist=&jit=&bdtype=0&spn=0&pi=0&gsm=0&oriquery=spring&objurl=http%3A%2F%2Ftoxsl.com%2Fblog%2Fimage%2F106%2Fpost-image_file-Why-Spring-Boot-is-the-Preferred-Java-Framework.png&rpstart=0&rpnum=0&adpicid=0&force=undefined"></center><p>Spring 框架是 Java 应用最广的框架，它的成功来源于理念，而不是技术本身，它的理念包括 IoC (Inversion of Control，控制反转) 和 AOP(Aspect Oriented Programming，面向切面编程)。</p><h4 id="什么是-Spring："><a href="#什么是-Spring：" class="headerlink" title="什么是 Spring："></a>什么是 Spring：</h4><p>1). Spring 是一个轻量级的 DI / IoC 和 AOP 容器的开源框架，来源于 Rod Johnson 在其著作《Expert one on one J2EE design and development》中阐述的部分理念和原型衍生而来。<br>2).Spring 提倡以“最少侵入”的方式来管理应用中的代码，这意味着我们可以随时安装或者卸载 Spring<br>3).适用范围：任何 Java 应用<br>4).Spring 的根本使命：简化 Java 开发</p><h4 id="Spring-中常用术语："><a href="#Spring-中常用术语：" class="headerlink" title="Spring 中常用术语："></a>Spring 中常用术语：<ul></ul></h4><li><strong><font color="red">框架</font></strong>：是能完成一定功能的半成品。框架能够帮助我们完成的是：项目的整体框架、一些基础功能、规定了类和对象如何创建，如何协作等，当我们开发一个项目时，框架帮助我们完成了一部分功能，我们自己再完成一部分，那这个项目就完成了。</li><li><strong><font color="red">非侵入式设计</font></strong>：从框架的角度可以理解为：无需继承框架提供的任何类这样我们在更换框架时，之前写过的代码几乎可以继续使用。</li><li><strong><font color="red">轻量级和重量级</font></strong>：轻量级是相对于重量级而言的，轻量级一般就是非入侵性的、所依赖的东西非常少、资源占用非常少、部署简单等等，其实就是比较容易使用，而重量级正好相反。</li><li><strong><font color="red">JavaBean</font></strong>：即符合 JavaBean 规范的 Java 类</li><li><strong><font color="red">POJO</font></strong>：即 Plain Old Java Objects，简单老式 Java 对象它可以包含业务逻辑或持久化逻辑，但不担当任何特殊角色且不继承或不实现任何其它Java框架的类或接口。</li>> 注意：bean 的各种名称——虽然 Spring 用 bean 或者 JavaBean 来表示应用组件，但并不意味着 Spring 组件必须遵循 JavaBean 规范，一个 Spring 组件可以是任意形式的 POJO。<li><strong><font color="red">容器</font></strong>：在日常生活中容器就是一种盛放东西的器具，从程序设计角度看就是装对象的的对象，因为存在放入、拿出等操作，所以容器还要管理对象的生命周期。<h4 id="Spring-的优势"><a href="#Spring-的优势" class="headerlink" title="Spring 的优势"></a>Spring 的优势<ul></ul></h4></li><li><strong><font color="red">低侵入 / 低耦合</font></strong> （降低组件之间的耦合度，实现软件各层之间的解耦）</li><li><strong><font color="red">声明式事务管理</font></strong>（基于切面和惯例）</li><li><strong><font color="red">方便集成其他框架</font></strong>（如MyBatis、Hibernate）</li><li><strong><font color="red">降低 Java 开发难度</font></strong></li><li>Spring 框架中包括了 J2EE 三层的每一层的解决方案（一站式）</li><h4 id="Spring能帮我们做什么"><a href="#Spring能帮我们做什么" class="headerlink" title="Spring能帮我们做什么"></a>Spring能帮我们做什么</h4><p>①.Spring 能帮我们根据配置文件<strong><font color="red">创建及组装对象之间的依赖关系。</font></strong><br>②.Spring <strong><font color="red">面向切面编程能帮助我们无耦合的实现日志记录，性能统计，安全控制。</font></strong><br>③.Spring 能非常简单的帮我们<strong><font color="red">管理数据库事务。</font></strong><br>④.Spring 还<strong><font color="red">提供了与第三方数据访问框架</font></strong>（如Hibernate、JPA）无缝集成，而且自己也提供了一套JDBC访问模板来方便数据库访问。<br>⑤.Spring 还<strong><font color="red">提供与第三方Web（如Struts1/2、JSF）框架无缝集成，而且自己也提供了一套Spring MVC框架，来方便web层搭建。</font></strong><br>⑥.Spring 能方便的与Java EE（如Java Mail、任务调度）整合，与更多技术整合（比如缓存框架）。</p><h4 id="Spring的框架体系结构："><a href="#Spring的框架体系结构：" class="headerlink" title="Spring的框架体系结构："></a><font color="green">Spring的框架体系结构：</font></h4><center><img src="https://github.com/LoverITer/Img/blob/master/20190805/797930-20161206103240788-1769881977.png"></center><blockquote><ul><li>Data Access/Integration层包含有JDBC、ORM、OXM、JMS和Transaction模块。</li><li>Web层包含了Web、Web-Servlet、WebSocket、Web-Porlet模块。</li><li>AOP模块提供了一个符合AOP联盟标准的面向切面编程的实现。</li><li>Core Container(核心容器)：包含有Beans、Core、Context和SpEL模块。</li><li>Test模块支持使用JUnit和TestNG对Spring组件进行测试。</li></ul></blockquote><p>下面介绍这5个部分的jar以及依赖关系</p><h5 id="Core"><a href="#Core" class="headerlink" title="Core"></a><strong><font size="5">Core</font></strong></h5><p>core部分包含4个模块:<br>spring-core：依赖注入IoC与DI的最基本实现<br>spring-beans：Bean工厂与bean的装配<br>spring-context：spring的context上下文即IoC容器<br>spring-expression：spring表达式语言<br>它们的依赖关系</p><center><img src="https://github.com/LoverITer/Img/blob/master/20190805/797930-20161206101318569-352180177.png"></center><h5 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a><strong><font size="5">AOP</font></strong></h5><p>aop部分包含4个模块:<br>spring-aop：面向切面编程<br>spring-aspects：集成AspectJ<br>spring-instrument：提供一些类级的工具支持和ClassLoader级的实现，用于服务器<br>spring-instrument-tomcat：针对tomcat的instrument实现<br>它们的依赖关系</p><center><img src="https://github.com/LoverITer/Img/blob/master/20190805/797930-20161206102118366-1545880227.png"></center><h5 id="Data-Access"><a href="#Data-Access" class="headerlink" title="Data Access"></a><strong><font size="5">Data Access</font></strong></h5><p>data access部分包含5个模块<br>spring-jdbc：jdbc的支持<br>spring-tx：事务控制<br>spring-orm：对象关系映射，集成orm框架<br>spring-oxm：对象xml映射<br>spring-jms：java消息服务<br>它们的依赖关系</p><center><img src="https://github.com/LoverITer/Img/blob/master/20190805/797930-20161206102441772-1998211727.png"></center><h5 id="Web"><a href="#Web" class="headerlink" title="Web"></a><strong><font size="5">Web</font></strong></h5><p>web部分包含4个模块<br>spring-web：基础web功能，如文件上传<br>spring-webmvc：mvc实现<br>spring-webmvc-portlet：基于portlet的mvc实现<br>spring-struts：与struts的集成，不推荐，spring4不再提供<br>它们的依赖关系</p><center><img src="https://github.com/LoverITer/Img/blob/master/20190805/797930-20161206102753335-1304605445.png"></center><h5 id="Test"><a href="#Test" class="headerlink" title="Test"></a><strong><font size="5">Test</font></strong></h5><p>test部分只有一个模块，我将spring-context-support也放在这吧<br>spring-test：spring测试，提供junit与mock测试功能<br>spring-context-support：spring额外支持包，比如邮件服务、视图解析等<br>它们的依赖关系</p><center><img src="https://github.com/LoverITer/Img/blob/master/20190805/797930-20161206103031929-91169155.png"></center>]]></content>
    
    <summary type="html">
    
      
      
        &lt;center&gt;
&lt;img src=&quot;http://image.baidu.com/search/detail?ct=503316480&amp;z=undefined&amp;tn=baiduimagedetail&amp;ipn=d&amp;word=spring%E5%9B%BE%E6%A0%87&amp;ste
      
    
    </summary>
    
    
      <category term="Spring框架" scheme="http://easyblog.top/tags/Spring%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring MVC" scheme="http://easyblog.top/tags/Spring-MVC/"/>
    
  </entry>
  
</feed>
