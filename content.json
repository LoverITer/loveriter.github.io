{"meta":{"title":"EasyBlog","subtitle":"Huangxin","description":"��ӭ�����ҵĸ��˲���","author":"Huangxin","url":"http://easyblog.top"},"pages":[],"posts":[{"title":"","slug":"Springmvc","date":"2019-08-05T09:05:43.818Z","updated":"2019-08-05T09:06:54.308Z","comments":true,"path":"2019/08/05/Springmvc/","link":"","permalink":"http://easyblog.top/2019/08/05/Springmvc/","excerpt":"","text":"@(Spring) [TOC] SpringMVC��ȡ���������һ�ַ�ʽ���������β��ϸ�һ�����������ͬ���Ĳ���1.�����ͨ���͵Ĳ���ֵʾ������ 123456789101112131415/** * ��1�ֻ����������ķ�ʽ���ڷ������β��ϸ�һ�����������ͬ���Ĳ����� * ֮��SpringMVC��������Զ�ע�����ֵ * @param username * @param model * @return */@RequestMapping(value = \"/welcome\")public String welcome(String username, Model model)&#123; System.out.println(\"�û�����\"+username); model.addAttribute(\"username\",username); return \"success\";&#125; 2.���POJO���͵�ֵʾ�����룺�½�Book.java�Լ�Address.java����POJOBook.java 12345678910111213package com.xzy.bean;public class Book &#123; private String name; private Double price; private Integer stock; //��� private Integer sales; //���� private String author; private Address address; //��ַ //ʡ��getter��setter������������дtoString()����&#125; Address.java 123456789package com.xzy.bean;public class Address &#123; private String province; private String county; private String city; //ʡ��getter��setter������������дtoString()���� дһ���򵥵ı�����index.html 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;SpringMvc��ȡ����&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;center&gt; &lt;h3&gt;¼���鼮��Ϣ&lt;/h3&gt; &lt;form action=\"book\" method=\"post\"&gt; ������&lt;input type=\"text\" name=\"name\" placeholder=\"��������...\"/&gt;&lt;br/&gt; ���ߣ�&lt;input type=\"text\" name=\"author\" placeholder=\"��������...\"/&gt;&lt;br/&gt; �۸�&lt;input type=\"text\" name=\"price\" placeholder=\"����۸�...\"/&gt;&lt;br/&gt; ��棺&lt;input type=\"text\" name=\"stock\" placeholder=\"������...\"/&gt;&lt;br/&gt; ������&lt;input type=\"text\" name=\"sales\" placeholder=\"��������...\"/&gt;&lt;br/&gt; &lt;input type=\"text\" name=\"address.province\" /&gt;ʡ&amp;nbsp; &lt;input type=\"text\" name=\"address.city\" /&gt;��&amp;nbsp; &lt;input type=\"text\" name=\"address.county\" /&gt;(��/��)&amp;nbsp;&lt;br/&gt; &lt;button type=\"submit\"&gt;�ύ��Ϣ&lt;/button&gt; &lt;/form&gt;&lt;/center&gt;&lt;/body&gt;&lt;/html&gt; �ύ���ҳ�棺book.jsp 12345678910111213141516171819202122232425&lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt;&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" import=\"com.xzy.bean.*\"%&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;SpringMVC��ȡ����&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;center&gt; &lt;div style=\"height: 200px;width: 100%\"&gt; &lt;h3&gt;�ύ���鼮����Ϣ��&lt;/h3&gt; &lt;table border=\"1px\" width=\"50%\"&gt; &lt;tr&gt;&lt;th&gt;����&lt;/th&gt;&lt;td&gt;$&#123;book.name&#125;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;th&gt;����&lt;/th&gt;&lt;td&gt;$&#123;book.author&#125;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;th&gt;�۸�&lt;/th&gt;&lt;td&gt;$&#123;book.price&#125;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;th&gt;���&lt;/th&gt;&lt;td&gt;$&#123;book.stock&#125;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;th&gt;����&lt;/th&gt;&lt;td&gt;$&#123;book.sales&#125;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;th&gt;����&lt;/th&gt;&lt;td&gt;$&#123;book.address&#125;&lt;/td&gt;&lt;/tr&gt; &lt;/table&gt; &lt;/div&gt;&lt;/center&gt;&lt;/body&gt;&lt;/html&gt; �ṩһ����������BookContorller.java 1234567891011121314151617181920212223242526package com.xzy.controller;import com.xzy.bean.Book;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import javax.servlet.http.HttpServletRequest;@Controllerpublic class BookContorller &#123; /** * SprningMVC�������Զ�ע�������POJO�����У����һ����Լ���ע�� * @param book * @param request * @return */ @RequestMapping(\"/book\") public String addbook(Book book, HttpServletRequest request)&#123; //��ӡ�õ���book��Ϣ System.out.println(book); request.setAttribute(\"book\",book); return \"book\"; &#125;&#125; ���Խ���� �ڶ��ַ�ʽ��ʹ��Spring�ṩ��ע��1. ʹ��@RequestParam ��ȡ����@RequestParam��Դ�룺 123456789101112131415public @interface RequestParam &#123; //Ĭ��ֵ����������ʾ���������key @AliasFor(\"name\") String value() default \"\"; //���������ֵ @AliasFor(\"value\") String name() default \"\"; //������������Ƿ���룬required=false��ʾ����������Ǳ���� boolean required() default true; //������Ĭ��ֵ String defaultValue() default \"\\n\\t\\t\\n\\t\\t\\n\\ue000\\ue001\\ue002\\n\\t\\t\\t\\t\\n\"; &#125; ʾ�����룺 12345678910111213141516171819/** * RequestParam���û�ȡ������keyΪuser,required=false��ʾ����������Ǳ���ģ� * defaultValue�����������Ĭ��ֵ * @RequestParam(value = \"user\", required = false, defaultValue = \"\") String username�� * �ȼ�����ǰд�ģ� * String user=null!=request.getParameter(\"user\")?request.getParameter(\"user\"):\"\"; * @param username * @param model * @return */@RequestMapping(\"/welcome3\")public String welocme3( @RequestParam(value = \"user\", required = false, defaultValue = \"\") String username, Model model) &#123; System.out.println(\"�û�����\" + username); model.addAttribute(\"username\", username); return \"success\";&#125; 2.ʹ��@RequestHeader��������ͷ����Ϣ@RequestHeader��@ReuqestParma��ʵ�ַ�ʽ���һ�ޣ�ʹ�÷���Ҳ������ͬ��ʾ������1��ʹ��RequestHeaderע�������������Ϣ 123456789101112131415161718192021/** * @RequestHeader(value = \"User-Agent\",required = false,defaultValue = \"\") String userAgent * ��ȡ����ͷ�е�ֵ���൱����ǰд�ģ� * String header=null!=request.getHeader(\"User-Agent\")? request.getHeader(\"User-Agent\"):\"\"; * @param username * @param userAgent * @param model * @return */ @RequestMapping(\"/welcome4\") public String welocme4( @RequestParam(value = \"user\", required = false, defaultValue = \"\") String username, @RequestHeader(value = \"User-Agent\",defaultValue = \"\") String userAgent, Model model) &#123; System.out.println(\"�û�����\" + username); System.out.println(\"User-Agent\"+userAgent); model.addAttribute(\"userAgent\",userAgent); model.addAttribute(\"username\", username); return \"success\"; &#125; ʾ������2��ʹ��RequestHeaderע���ȡ����ͷ����Cookie��Ϣ 123456789101112131415161718/** * ʹ��RequestHeader�������ͷ�е�Cookie��ȫ����Ϣ * @param username * @param cookie * @param model * @return */ @RequestMapping(\"/welcome5\") public String welocome5( @RequestParam(value = \"user\", required = false, defaultValue = \"\") String username, @RequestHeader(value = \"Cookie\",required = false,defaultValue = \"\") String cookie, Model model)&#123; System.out.println(\"�û�����\" + username); model.addAttribute(\"cookie\",cookie); model.addAttribute(\"username\", username); return \"success\"; &#125; 3.ʹ��CookieValue�������ͷ����JSESSIONIDʾ�����룺 123456789101112131415161718192021/** * ʹ��SpringMVC�ṩ��@CookieValueע�⣬����ֻ���JSESSIONID��ֵ * @param username * @param cookie * @param model * @return */ @RequestMapping(\"/welcome6\") public String welocome6( @RequestParam(value = \"user\", required = false, defaultValue = \"\") String username, @CookieValue(value = \"JSESSIONID\" ,required = false,defaultValue = \"\") String cookie, Model model)&#123; System.out.println(\"�û�����\" + username); model.addAttribute(\"cookie\",cookie); model.addAttribute(\"username\", username); System.out.println(\"cookie��\"+cookie); return \"success\"; &#125;","categories":[],"tags":[],"keywords":[]},{"title":"Hello World","slug":"hello-world","date":"2019-08-05T02:02:46.753Z","updated":"2019-08-05T02:02:46.753Z","comments":true,"path":"2019/08/05/hello-world/","link":"","permalink":"http://easyblog.top/2019/08/05/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]}]}